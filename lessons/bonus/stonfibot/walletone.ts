import TonWeb from "tonweb";
const nacl = require("tweetnacl");


//EQDTW0aiqvAw3bVhI4_A2ilxfT3wdH2RolB7rBFg9d06nVf3


function newSeed() {
    return nacl.sign.keyPair().secretKey.slice(0, 32);
}

const init = async () => {
    const providerUrl = 'https://testnet.toncenter.com/api/v2/jsonRPC'; // TON HTTP API url. Use this url for testnet
    const apiKey = ''; // Obtain your API key in https://t.me/tontestnetapibot for high rate limits
    const tonweb = new TonWeb(new TonWeb.HttpProvider(providerUrl, {apiKey})); // Initialize TON SDK
	
	// New secret key can be generated by `tonweb.utils.newSeed()`
    //const seed = newSeed(); // Uint8Array
	//const base64seed = TonWeb.utils.bytesToBase64(seed);
	//console.log(base64seed);
	
	const seed = tonweb.utils.base64ToBytes(''); // A's private (secret) key
	const keyPair = nacl.sign.keyPair.fromSeed(
		seed 	
	);
	
	
	let wallet = tonweb.wallet.create({publicKey: keyPair.publicKey, wc: 0}); // create interface to wallet smart contract (wallet v3 by default) wc: 0 - workchain 
	
	const address = await wallet.getAddress();
	
	console.log(address.toString(true,true,true)); //readable form of address
	
	await wallet.deploy(keyPair.secretKey).send(); //Testnet faucet:  https://t.me/testgiver_ton_bot
	
	console.log("ready");


	
}

init();

































